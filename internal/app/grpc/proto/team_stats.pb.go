// Code generated by protoc-gen-go. DO NOT EDIT.
// versions:
// 	protoc-gen-go v1.24.0
// 	protoc        v3.6.1
// source: internal/app/grpc/proto/team_stats.proto

package proto

import (
	context "context"
	proto "github.com/golang/protobuf/proto"
	wrappers "github.com/golang/protobuf/ptypes/wrappers"
	grpc "google.golang.org/grpc"
	codes "google.golang.org/grpc/codes"
	status "google.golang.org/grpc/status"
	protoreflect "google.golang.org/protobuf/reflect/protoreflect"
	protoimpl "google.golang.org/protobuf/runtime/protoimpl"
	reflect "reflect"
	sync "sync"
)

const (
	// Verify that this generated code is sufficiently up-to-date.
	_ = protoimpl.EnforceVersion(20 - protoimpl.MinVersion)
	// Verify that runtime/protoimpl is sufficiently up-to-date.
	_ = protoimpl.EnforceVersion(protoimpl.MaxVersion - 20)
)

// This is a compile-time assertion that a sufficiently up-to-date version
// of the legacy proto package is being used.
const _ = proto.ProtoPackageIsVersion4

type TeamStat struct {
	state         protoimpl.MessageState
	sizeCache     protoimpl.SizeCache
	unknownFields protoimpl.UnknownFields

	FixtureId uint64                `protobuf:"varint,1,opt,name=fixture_id,json=fixtureId,proto3" json:"fixture_id,omitempty"`
	Stat      string                `protobuf:"bytes,2,opt,name=stat,proto3" json:"stat,omitempty"`
	Value     *wrappers.UInt32Value `protobuf:"bytes,3,opt,name=value,proto3" json:"value,omitempty"`
}

func (x *TeamStat) Reset() {
	*x = TeamStat{}
	if protoimpl.UnsafeEnabled {
		mi := &file_internal_app_grpc_proto_team_stats_proto_msgTypes[0]
		ms := protoimpl.X.MessageStateOf(protoimpl.Pointer(x))
		ms.StoreMessageInfo(mi)
	}
}

func (x *TeamStat) String() string {
	return protoimpl.X.MessageStringOf(x)
}

func (*TeamStat) ProtoMessage() {}

func (x *TeamStat) ProtoReflect() protoreflect.Message {
	mi := &file_internal_app_grpc_proto_team_stats_proto_msgTypes[0]
	if protoimpl.UnsafeEnabled && x != nil {
		ms := protoimpl.X.MessageStateOf(protoimpl.Pointer(x))
		if ms.LoadMessageInfo() == nil {
			ms.StoreMessageInfo(mi)
		}
		return ms
	}
	return mi.MessageOf(x)
}

// Deprecated: Use TeamStat.ProtoReflect.Descriptor instead.
func (*TeamStat) Descriptor() ([]byte, []int) {
	return file_internal_app_grpc_proto_team_stats_proto_rawDescGZIP(), []int{0}
}

func (x *TeamStat) GetFixtureId() uint64 {
	if x != nil {
		return x.FixtureId
	}
	return 0
}

func (x *TeamStat) GetStat() string {
	if x != nil {
		return x.Stat
	}
	return ""
}

func (x *TeamStat) GetValue() *wrappers.UInt32Value {
	if x != nil {
		return x.Value
	}
	return nil
}

var File_internal_app_grpc_proto_team_stats_proto protoreflect.FileDescriptor

var file_internal_app_grpc_proto_team_stats_proto_rawDesc = []byte{
	0x0a, 0x28, 0x69, 0x6e, 0x74, 0x65, 0x72, 0x6e, 0x61, 0x6c, 0x2f, 0x61, 0x70, 0x70, 0x2f, 0x67,
	0x72, 0x70, 0x63, 0x2f, 0x70, 0x72, 0x6f, 0x74, 0x6f, 0x2f, 0x74, 0x65, 0x61, 0x6d, 0x5f, 0x73,
	0x74, 0x61, 0x74, 0x73, 0x2e, 0x70, 0x72, 0x6f, 0x74, 0x6f, 0x12, 0x05, 0x70, 0x72, 0x6f, 0x74,
	0x6f, 0x1a, 0x1e, 0x67, 0x6f, 0x6f, 0x67, 0x6c, 0x65, 0x2f, 0x70, 0x72, 0x6f, 0x74, 0x6f, 0x62,
	0x75, 0x66, 0x2f, 0x77, 0x72, 0x61, 0x70, 0x70, 0x65, 0x72, 0x73, 0x2e, 0x70, 0x72, 0x6f, 0x74,
	0x6f, 0x1a, 0x26, 0x69, 0x6e, 0x74, 0x65, 0x72, 0x6e, 0x61, 0x6c, 0x2f, 0x61, 0x70, 0x70, 0x2f,
	0x67, 0x72, 0x70, 0x63, 0x2f, 0x70, 0x72, 0x6f, 0x74, 0x6f, 0x2f, 0x72, 0x65, 0x71, 0x75, 0x65,
	0x73, 0x74, 0x73, 0x2e, 0x70, 0x72, 0x6f, 0x74, 0x6f, 0x22, 0x71, 0x0a, 0x08, 0x54, 0x65, 0x61,
	0x6d, 0x53, 0x74, 0x61, 0x74, 0x12, 0x1d, 0x0a, 0x0a, 0x66, 0x69, 0x78, 0x74, 0x75, 0x72, 0x65,
	0x5f, 0x69, 0x64, 0x18, 0x01, 0x20, 0x01, 0x28, 0x04, 0x52, 0x09, 0x66, 0x69, 0x78, 0x74, 0x75,
	0x72, 0x65, 0x49, 0x64, 0x12, 0x12, 0x0a, 0x04, 0x73, 0x74, 0x61, 0x74, 0x18, 0x02, 0x20, 0x01,
	0x28, 0x09, 0x52, 0x04, 0x73, 0x74, 0x61, 0x74, 0x12, 0x32, 0x0a, 0x05, 0x76, 0x61, 0x6c, 0x75,
	0x65, 0x18, 0x03, 0x20, 0x01, 0x28, 0x0b, 0x32, 0x1c, 0x2e, 0x67, 0x6f, 0x6f, 0x67, 0x6c, 0x65,
	0x2e, 0x70, 0x72, 0x6f, 0x74, 0x6f, 0x62, 0x75, 0x66, 0x2e, 0x55, 0x49, 0x6e, 0x74, 0x33, 0x32,
	0x56, 0x61, 0x6c, 0x75, 0x65, 0x52, 0x05, 0x76, 0x61, 0x6c, 0x75, 0x65, 0x32, 0x51, 0x0a, 0x10,
	0x54, 0x65, 0x61, 0x6d, 0x53, 0x74, 0x61, 0x74, 0x73, 0x53, 0x65, 0x72, 0x76, 0x69, 0x63, 0x65,
	0x12, 0x3d, 0x0a, 0x0e, 0x47, 0x65, 0x74, 0x53, 0x74, 0x61, 0x74, 0x46, 0x6f, 0x72, 0x54, 0x65,
	0x61, 0x6d, 0x12, 0x16, 0x2e, 0x70, 0x72, 0x6f, 0x74, 0x6f, 0x2e, 0x54, 0x65, 0x61, 0x6d, 0x53,
	0x74, 0x61, 0x74, 0x52, 0x65, 0x71, 0x75, 0x65, 0x73, 0x74, 0x1a, 0x0f, 0x2e, 0x70, 0x72, 0x6f,
	0x74, 0x6f, 0x2e, 0x54, 0x65, 0x61, 0x6d, 0x53, 0x74, 0x61, 0x74, 0x22, 0x00, 0x30, 0x01, 0x42,
	0x19, 0x5a, 0x17, 0x69, 0x6e, 0x74, 0x65, 0x72, 0x6e, 0x61, 0x6c, 0x2f, 0x61, 0x70, 0x70, 0x2f,
	0x67, 0x72, 0x70, 0x63, 0x2f, 0x70, 0x72, 0x6f, 0x74, 0x6f, 0x62, 0x06, 0x70, 0x72, 0x6f, 0x74,
	0x6f, 0x33,
}

var (
	file_internal_app_grpc_proto_team_stats_proto_rawDescOnce sync.Once
	file_internal_app_grpc_proto_team_stats_proto_rawDescData = file_internal_app_grpc_proto_team_stats_proto_rawDesc
)

func file_internal_app_grpc_proto_team_stats_proto_rawDescGZIP() []byte {
	file_internal_app_grpc_proto_team_stats_proto_rawDescOnce.Do(func() {
		file_internal_app_grpc_proto_team_stats_proto_rawDescData = protoimpl.X.CompressGZIP(file_internal_app_grpc_proto_team_stats_proto_rawDescData)
	})
	return file_internal_app_grpc_proto_team_stats_proto_rawDescData
}

var file_internal_app_grpc_proto_team_stats_proto_msgTypes = make([]protoimpl.MessageInfo, 1)
var file_internal_app_grpc_proto_team_stats_proto_goTypes = []interface{}{
	(*TeamStat)(nil),             // 0: proto.TeamStat
	(*wrappers.UInt32Value)(nil), // 1: google.protobuf.UInt32Value
	(*TeamStatRequest)(nil),      // 2: proto.TeamStatRequest
}
var file_internal_app_grpc_proto_team_stats_proto_depIdxs = []int32{
	1, // 0: proto.TeamStat.value:type_name -> google.protobuf.UInt32Value
	2, // 1: proto.TeamStatsService.GetStatForTeam:input_type -> proto.TeamStatRequest
	0, // 2: proto.TeamStatsService.GetStatForTeam:output_type -> proto.TeamStat
	2, // [2:3] is the sub-list for method output_type
	1, // [1:2] is the sub-list for method input_type
	1, // [1:1] is the sub-list for extension type_name
	1, // [1:1] is the sub-list for extension extendee
	0, // [0:1] is the sub-list for field type_name
}

func init() { file_internal_app_grpc_proto_team_stats_proto_init() }
func file_internal_app_grpc_proto_team_stats_proto_init() {
	if File_internal_app_grpc_proto_team_stats_proto != nil {
		return
	}
	file_internal_app_grpc_proto_requests_proto_init()
	if !protoimpl.UnsafeEnabled {
		file_internal_app_grpc_proto_team_stats_proto_msgTypes[0].Exporter = func(v interface{}, i int) interface{} {
			switch v := v.(*TeamStat); i {
			case 0:
				return &v.state
			case 1:
				return &v.sizeCache
			case 2:
				return &v.unknownFields
			default:
				return nil
			}
		}
	}
	type x struct{}
	out := protoimpl.TypeBuilder{
		File: protoimpl.DescBuilder{
			GoPackagePath: reflect.TypeOf(x{}).PkgPath(),
			RawDescriptor: file_internal_app_grpc_proto_team_stats_proto_rawDesc,
			NumEnums:      0,
			NumMessages:   1,
			NumExtensions: 0,
			NumServices:   1,
		},
		GoTypes:           file_internal_app_grpc_proto_team_stats_proto_goTypes,
		DependencyIndexes: file_internal_app_grpc_proto_team_stats_proto_depIdxs,
		MessageInfos:      file_internal_app_grpc_proto_team_stats_proto_msgTypes,
	}.Build()
	File_internal_app_grpc_proto_team_stats_proto = out.File
	file_internal_app_grpc_proto_team_stats_proto_rawDesc = nil
	file_internal_app_grpc_proto_team_stats_proto_goTypes = nil
	file_internal_app_grpc_proto_team_stats_proto_depIdxs = nil
}

// Reference imports to suppress errors if they are not otherwise used.
var _ context.Context
var _ grpc.ClientConnInterface

// This is a compile-time assertion to ensure that this generated file
// is compatible with the grpc package it is being compiled against.
const _ = grpc.SupportPackageIsVersion6

// TeamStatsServiceClient is the client API for TeamStatsService service.
//
// For semantics around ctx use and closing/ending streaming RPCs, please refer to https://godoc.org/google.golang.org/grpc#ClientConn.NewStream.
type TeamStatsServiceClient interface {
	GetStatForTeam(ctx context.Context, in *TeamStatRequest, opts ...grpc.CallOption) (TeamStatsService_GetStatForTeamClient, error)
}

type teamStatsServiceClient struct {
	cc grpc.ClientConnInterface
}

func NewTeamStatsServiceClient(cc grpc.ClientConnInterface) TeamStatsServiceClient {
	return &teamStatsServiceClient{cc}
}

func (c *teamStatsServiceClient) GetStatForTeam(ctx context.Context, in *TeamStatRequest, opts ...grpc.CallOption) (TeamStatsService_GetStatForTeamClient, error) {
	stream, err := c.cc.NewStream(ctx, &_TeamStatsService_serviceDesc.Streams[0], "/proto.TeamStatsService/GetStatForTeam", opts...)
	if err != nil {
		return nil, err
	}
	x := &teamStatsServiceGetStatForTeamClient{stream}
	if err := x.ClientStream.SendMsg(in); err != nil {
		return nil, err
	}
	if err := x.ClientStream.CloseSend(); err != nil {
		return nil, err
	}
	return x, nil
}

type TeamStatsService_GetStatForTeamClient interface {
	Recv() (*TeamStat, error)
	grpc.ClientStream
}

type teamStatsServiceGetStatForTeamClient struct {
	grpc.ClientStream
}

func (x *teamStatsServiceGetStatForTeamClient) Recv() (*TeamStat, error) {
	m := new(TeamStat)
	if err := x.ClientStream.RecvMsg(m); err != nil {
		return nil, err
	}
	return m, nil
}

// TeamStatsServiceServer is the server API for TeamStatsService service.
type TeamStatsServiceServer interface {
	GetStatForTeam(*TeamStatRequest, TeamStatsService_GetStatForTeamServer) error
}

// UnimplementedTeamStatsServiceServer can be embedded to have forward compatible implementations.
type UnimplementedTeamStatsServiceServer struct {
}

func (*UnimplementedTeamStatsServiceServer) GetStatForTeam(*TeamStatRequest, TeamStatsService_GetStatForTeamServer) error {
	return status.Errorf(codes.Unimplemented, "method GetStatForTeam not implemented")
}

func RegisterTeamStatsServiceServer(s *grpc.Server, srv TeamStatsServiceServer) {
	s.RegisterService(&_TeamStatsService_serviceDesc, srv)
}

func _TeamStatsService_GetStatForTeam_Handler(srv interface{}, stream grpc.ServerStream) error {
	m := new(TeamStatRequest)
	if err := stream.RecvMsg(m); err != nil {
		return err
	}
	return srv.(TeamStatsServiceServer).GetStatForTeam(m, &teamStatsServiceGetStatForTeamServer{stream})
}

type TeamStatsService_GetStatForTeamServer interface {
	Send(*TeamStat) error
	grpc.ServerStream
}

type teamStatsServiceGetStatForTeamServer struct {
	grpc.ServerStream
}

func (x *teamStatsServiceGetStatForTeamServer) Send(m *TeamStat) error {
	return x.ServerStream.SendMsg(m)
}

var _TeamStatsService_serviceDesc = grpc.ServiceDesc{
	ServiceName: "proto.TeamStatsService",
	HandlerType: (*TeamStatsServiceServer)(nil),
	Methods:     []grpc.MethodDesc{},
	Streams: []grpc.StreamDesc{
		{
			StreamName:    "GetStatForTeam",
			Handler:       _TeamStatsService_GetStatForTeam_Handler,
			ServerStreams: true,
		},
	},
	Metadata: "internal/app/grpc/proto/team_stats.proto",
}
